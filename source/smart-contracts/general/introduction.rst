===============================
Введение в смарт-контракты
===============================

Смарт-контракт - это предоставляемый пользователем фрагмент кода, отправляемый в блокчейн Concordium, используемый для любых действий, не определенных явно ядром системы. Смарт-контракты выполняются узлами в сети Concordium в соответствии с предопределенными правилами. Их исполнение полностью прозрачно, и все узлы должны согласиться с тем, что результат выполнения контракта может быть основан только на общедоступной информации.

Смарт-контракт может получать, хранить и отправлять токены GTU, он может наблюдать (лисенить) за некоторыми функциями в блокчейне, а также иметь свои логические состояния (статусы). Смарт-контракты всегда выполняются внешними действиями, например, когда аккаунт посылает определенное сообщение. На практике смарт-контракты часто представляют собой небольшую часть более крупной системы, сочетающую в себе офф-чейн и он-чейн функции. Примером офф-чейн функциональности может быть сервер, который вызывает смарт-контракт на основе данных из реального мира, таких как цены на акции или информация о погоде.

Для чего нужны смарт-контракты?
=============================
Смарт-контракты помогают повысить доверие к "третьей стороне" (например,посреднику), в некоторых случаях устраняя необходимость в третьей стороне вообще, в других же - уменьшая их возможности делать что-либо (например, с токенами) и, таким образом, уменьшая необходимый уровень доверия к ним.

Поскольку смарт-контракты выполняются полностью прозрачно, и каждый, кто имеет доступ к ноде, может проверить их, они могут быть очень полезны для обеспечения соглашения между сторонами.

Пример смарт-контракта на аукционе
------------------------------
Примером использования смарт-контрактов может быть проведение аукциона. Мы программируем смарт-контракт так, чтобы он принимал разные ставки от кого угодно и отслеживал самую высокую цену. По окончании аукциона смарт-контракт отправляет токены GTU победившей ставки  продавцу, а все остальные ставки - обратно. Затем продавец должен отправить товар победителю.

Смарт-контракт заменяет главную роль аукционера. Сам контракт регулирует только часть торгов и распределение GTU в сети. Вероятно, также потребуется некоторая логика для возмещения предложившему самую высокую ставку в случае, если продавец не выполняет свои обязательства. Скорее всего, это будет означать, что контракт должен будет содержать некое доказательство того, что продавец действительно выполнил свое обязательство, или какой-то способ подачи жалобы от участника, предложившему самую высокую цену. Смарт-контракты не могут решить эти реальные проблемы автоматически, и лучшее решение, вероятно, будет зависеть от специфики аукциона.

Для чего НЕ нужны смарт-контракты?
===================================

Смарт-контракты - это новая интересная технология, и мы все еще ищем новые способы их использования. Однако в некоторых случаях смарт-контракты не являются оптимальным решением.

Одним из ключевых преимуществ смарт-контрактов является доверие к выполнению кода, и для этого большое количество нод в блокчейне должно выполнять один и тот же код и обеспечивать согласование результата (консенсус). Естественно, это обходится дороже по сравнению с запуском одного и того же кода на одном узле в облаке.

В случаях, когда смарт-контракту нужно выполнить "тяжелые" вычисления, можно было бы вынести этот расчет из смарт-контракта и заставить его выполнять только некоторые ключевые части вычислений, используя криптографию только для обеспечения правильности выполнения других частей.

Наконец, важно помнить, что смарт-контракты не обеспечивают конфиденциальности, и **все**, к чему у смарт-контракта есть доступ, доступно всем остальным в сети Concordium, а это означает, что конфиденциальные данные достаточно трудно будет обрабатывать используя контракты. В некоторых случаях можно использовать криптографические инструменты, чтобы не работать с данными напрямую, вместо этого контракты должны работать с шифрованными данными, которые скрывают фактические данные.

Жизненный цикл смарт-контракта
==============================
Смарт-контракт сначала развертывается в сети как часть contract module. После этого смарт-контракт может быть инициализирован для получения contract instance. После этого инстанс смарт-контракта можно многократно обновлять в соответствии с его внутренней логикой.
